---
import TableOfContentsHeading from "./TableOfContentsHeading.astro";

// https://kld.dev/building-table-of-contents/
const { headings } = Astro.props;

interface TocItem {
  depth: number;
  text: string;
  slug: string;
  subheadings?: TocItem[];
}

function buildToc(headings: any[]): TocItem[] {
  const toc: TocItem[] = [];
  const parentHeadings = new Map();

  headings.forEach((h) => {
    const heading: TocItem = {
      depth: h.depth,
      text: h.text,
      slug: h.slug,
      subheadings: []
    };

    // Handle different heading levels
    if (h.depth === 2) {
      toc.push(heading);
      parentHeadings.set(h.depth, heading);
    } else if (h.depth === 3) {
      const parent = parentHeadings.get(2);
      if (parent) {
        parent.subheadings?.push(heading);
      }
    }
  });

  return toc;
}

const toc = buildToc(headings);
---

<details
  open
  class="animate rounded-lg border border-black/15 dark:border-white/20"
>
  <summary>Table of Contents</summary>
  <nav class="">
    <ul class="py-3">
      {toc.map((heading) => <TableOfContentsHeading heading={heading} />)}
    </ul>
  </nav>
</details>

<style>
  summary {
    @apply cursor-pointer rounded-t-lg px-3 py-1.5 font-medium transition-colors;
  }

  summary:hover {
    @apply bg-black/5 dark:bg-white/5;
  }

  details[open] summary {
    @apply bg-black/5 dark:bg-white/5;
  }
</style>
